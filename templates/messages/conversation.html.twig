{% extends 'base.html.twig' %}

{% block title %}Conversation avec {{ receiver.fullName }}{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <div class="flex h-[calc(100vh-200px)]">
        {# Liste des conversations #}
        <div class="w-1/3 bg-gray-800 rounded-l-lg overflow-hidden">
            <div class="p-4 bg-gray-900 border-b border-gray-700">
                <h2 class="text-xl font-bold text-white">Conversations</h2>
            </div>
            <div class="overflow-y-auto h-full">
                {% for conversation in conversations %}
                    {% set otherUser = conversation.sender.id == app.user.id ? conversation.receiver : conversation.sender %}
<a href="{{ path('app_messages_conversation', {
    'receiverId': otherUser.id,
    'objectId': conversation.object ? conversation.object.id : null
}) }}" 
   class="block p-4 hover:bg-gray-700 transition border-b border-gray-700 {% if conversation.object and object and conversation.object.id == object.id %}bg-gray-700{% endif %}">
    <div class="flex items-center">
        <div class="flex-1">
            <h3 class="font-semibold text-white">{{ otherUser.fullName }}</h3>
            {% if conversation.object %}
                <p class="text-blue-400 text-xs">{{ conversation.object.title }}</p>
            {% endif %}
            <p class="text-gray-400 text-sm truncate">
                {{ conversation.content|slice(0, 50) }}...
            </p>
        </div>
        <span class="text-xs text-gray-500">
            {{ conversation.sentAt|date('d/m/Y H:i') }}
        </span>
    </div>
</a>

                {% else %}
                    <div class="p-4 text-gray-400">
                        Aucune conversation
                    </div>
                {% endfor %}
            </div>
        </div>

        {# Zone de conversation active #}
        <div class="w-2/3 bg-gray-900 rounded-r-lg flex flex-col">
            {# En-tête de la conversation #}
            <div class="p-4 bg-gray-800 border-b border-gray-700">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <h2 class="text-xl font-bold text-white">{{ receiver.fullName }}</h2>
                    </div>
                    {% if object %}
                        <div class="text-blue-400 text-sm">
                            Objet : {{ object.title }}
                        </div>
                    {% endif %}
                </div>
            </div>

         
            {# Messages #}
<div class="flex-1 overflow-y-auto p-4" id="messages-container">
    {% for message in messages %}
        <div class="mb-4 flex {% if message.sender.id == app.user.id %}justify-end{% else %}justify-start{% endif %}">
            <div class="{% if message.sender.id == app.user.id %}
                    bg-blue-600 text-white
                    {% else %}
                    bg-gray-700 text-white
                    {% endif %} 
                max-w-[80%] min-w-[20%] rounded-lg p-3 break-words"
                style="word-break: break-word;">
                {{ message.content }}
                <div class="text-xs text-gray-300 mt-1">
                    {{ message.sentAt|date('d/m/Y H:i') }}
                </div>
            </div>
        </div>
    {% endfor %}
</div>

            {# Formulaire d'envoi #}
            <div class="p-4 bg-gray-800 border-t border-gray-700">
                <form id="message-form" class="flex gap-4">
                    <input type="hidden" name="receiverId" value="{{ receiver.id }}">
                    {% if object %}
                        <input type="hidden" name="objectId" value="{{ object.id }}">
                    {% endif %}
                    <input type="text" 
                           name="content" 
                           class="flex-1 bg-gray-700 text-white rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                           placeholder="Écrivez votre message...">
                    <button type="submit" 
                            class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition">
                        Envoyer
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>


 {% include 'dashboard/add_object.html.twig' with { 'form': form } %}
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const messageForm = document.getElementById('message-form');
    const messagesContainer = document.getElementById('messages-container');

    if (messageForm) {
        messageForm.addEventListener('submit', async function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const receiverId = parseInt(formData.get('receiverId'), 10);

            const objectId = formData.get('objectId');
            const messageInput = this.querySelector('input[name="content"]');
            const submitButton = this.querySelector('button[type="submit"]');

            submitButton.disabled = true;

            try {
                const response = await fetch(`/messages/send/${receiverId}`, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                const data = await response.json();
                console.log('Réponse du serveur:', data);


                if (!data.success) {
                    throw new Error(data.message || 'Erreur lors de l\'envoi du message');
                }

                // Ajouter le message à la liste des messages
                const messageDiv = document.createElement('div');
                messageDiv.className = 'mb-4 ml-auto max-w-[70%]';
                messageDiv.innerHTML = `
                    <div class="bg-blue-600 text-white rounded-l-lg rounded-tr-lg p-3">
                        ${data.message.content}
                    </div>
                    <div class="text-xs text-gray-500 mt-1">
                        ${data.message.sentAt}
                    </div>
                `;
                messagesContainer.appendChild(messageDiv);

                // Réinitialiser le champ de message
                this.reset();
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur lors de l\'envoi du message : ' + error.message);
            } finally {
                submitButton.disabled = false;
                messageInput.focus();
            }
        });
    }
});

</script>
<script src="{{ asset('js/base.js') }}"></script>
 <script src="{{ asset('js/addObject.js') }}"></script>
   

{% endblock %}